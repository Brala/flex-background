/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
     ========================================================================== */
/**
   * Remove the margin in all browsers (opinionated).
   */
body {
  margin: 0; }

/**
   * Add the correct display in IE 9-.
   */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
   * Correct the font size and margin on `h1` elements within `section` and
   * `article` contexts in Chrome, Firefox, and Safari.
   */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
     ========================================================================== */
/**
   * Add the correct display in IE 9-.
   * 1. Add the correct display in IE.
   */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
   * Add the correct margin in IE 8.
   */
figure {
  margin: 1em 40px; }

/**
   * 1. Add the correct box sizing in Firefox.
   * 2. Show the overflow in Edge and IE.
   */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
     ========================================================================== */
/**
   * 1. Remove the gray background on active links in IE 10.
   * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
   */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
   * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
   */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
   * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
   */
b,
strong {
  font-weight: inherit; }

/**
   * Add the correct font weight in Chrome, Edge, and Safari.
   */
b,
strong {
  font-weight: bolder; }

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
   * Add the correct font style in Android 4.3-.
   */
dfn {
  font-style: italic; }

/**
   * Add the correct background and color in IE 9-.
   */
mark {
  background-color: #ff0;
  color: #000; }

/**
   * Add the correct font size in all browsers.
   */
small {
  font-size: 80%; }

/**
   * Prevent `sub` and `sup` elements from affecting the line height in
   * all browsers.
   */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
     ========================================================================== */
/**
   * Add the correct display in IE 9-.
   */
audio,
video {
  display: inline-block; }

/**
   * Add the correct display in iOS 4-7.
   */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
   * Remove the border on images inside links in IE 10-.
   */
img {
  border-style: none; }

/**
   * Hide the overflow in IE.
   */
svg:not(:root) {
  overflow: hidden; }

/* Forms
     ========================================================================== */
/**
   * 1. Change the font styles in all browsers (opinionated).
   * 2. Remove the margin in Firefox and Safari.
   */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
   * Show the overflow in IE.
   * 1. Show the overflow in Edge.
   */
button,
input {
  /* 1 */
  overflow: visible; }

/**
   * Remove the inheritance of text transform in Edge, Firefox, and IE.
   * 1. Remove the inheritance of text transform in Firefox.
   */
button,
select {
  /* 1 */
  text-transform: none; }

/**
   * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
   *    controls in Android 4.
   * 2. Correct the inability to style clickable types in iOS and Safari.
   */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
   * Remove the inner border and padding in Firefox.
   */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
   * Restore the focus styles unset by the previous rule.
   */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
   * Correct the padding in Firefox.
   */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
   * 1. Correct the text wrapping in Edge and IE.
   * 2. Correct the color inheritance from `fieldset` elements in IE.
   * 3. Remove the padding so developers are not caught out when they zero out
   *    `fieldset` elements in all browsers.
   */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
   * 1. Add the correct display in IE 9-.
   * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
   */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
   * Remove the default vertical scrollbar in IE.
   */
textarea {
  overflow: auto; }

/**
   * 1. Add the correct box sizing in IE 10-.
   * 2. Remove the padding in IE 10-.
   */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
   * Correct the cursor style of increment and decrement buttons in Chrome.
   */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
   * 1. Correct the odd appearance in Chrome and Safari.
   * 2. Correct the outline style in Safari.
   */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
   * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
   */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
   * 1. Correct the inability to style clickable types in iOS and Safari.
   * 2. Change font properties to `inherit` in Safari.
   */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
     ========================================================================== */
/*
   * Add the correct display in IE 9-.
   * 1. Add the correct display in Edge, IE, and Firefox.
   */
details,
menu {
  display: block; }

/*
   * Add the correct display in all browsers.
   */
summary {
  display: list-item; }

/* Scripting
     ========================================================================== */
/**
   * Add the correct display in IE 9-.
   */
canvas {
  display: inline-block; }

/**
   * Add the correct display in IE.
   */
template {
  display: none; }

/* Hidden
     ========================================================================== */
/**
   * Add the correct display in IE 10-.
   */
[hidden] {
  display: none; }

html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  font-family: 'Exo', sans-serif;
  font-size: 16px;
  color: #494949; }

html {
  background: #ca3c0c;
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

body {
  overflow-x: hidden;
  background: transparent; }

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0; }

ul {
  list-style-type: none;
  padding: 0; }

a {
  text-decoration: none;
  color: white; }

.l-right {
  float: right; }

.l-left {
  float: left; }

.l-background {
  width: 100%; }
  @media only screen and (max-width: 479px) {
    .l-background {
      height: 100%; } }

.m-header {
  height: 100%;
  min-height: 41.74688vw;
  max-height: 60vw;
  background: -webkit-gradient(linear, left top, left bottom, from(rgba(188, 50, 50, 0.25)), to(#ca3c0c)), url(../img/2.jpg);
  background: -o-linear-gradient(rgba(188, 50, 50, 0.25), #ca3c0c), url(../img/2.jpg);
  background: linear-gradient(rgba(188, 50, 50, 0.25), #ca3c0c), url(../img/2.jpg);
  color: white;
  background-size: cover;
  background-position: center;
  padding-top: 1.5rem;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  position: relative;
  z-index: 0;
  zoom: 0; }
  .m-header:after {
    content: "";
    display: block;
    clear: both; }
  @media only screen and (max-width: 479px) {
    .m-header {
      text-align: center;
      padding-top: 0.5rem;
      max-height: none; } }
  .m-header--logo {
    font-size: 2.2rem;
    font-weight: bold;
    float: left;
    margin-left: 5vw;
    padding: 0.2rem 1rem;
    -webkit-transition: -webkit-box-shadow  0.8s;
    transition: -webkit-box-shadow  0.8s;
    -o-transition: box-shadow  0.8s;
    transition: box-shadow  0.8s;
    transition: box-shadow  0.8s, -webkit-box-shadow  0.8s; }
    .m-header--logo:hover {
      text-shadow: 0 0 3px white;
      -webkit-box-shadow: 0 0 30px white;
              box-shadow: 0 0 30px white; }
    @media only screen and (max-width: 479px) {
      .m-header--logo {
        font-size: 10vw;
        float: none;
        padding-left: 0; } }
    @media (min-width: 480px) and (max-width: 1024px) {
      .m-header--logo {
        font-size: 4.5vw;
        padding-left: 0; } }
  .m-header--navbar {
    float: right;
    padding-right: 6vw; }
    @media only screen and (max-width: 479px) {
      .m-header--navbar {
        float: none;
        padding-right: 0; } }
    @media (min-width: 480px) and (max-width: 1024px) {
      .m-header--navbar {
        padding: 0; } }
    @media only screen and (max-width: 479px) {
      .m-header--navbar--ul {
        -webkit-box-shadow: 0 0 10vw white;
                box-shadow: 0 0 10vw white;
        zoom: 0;
        margin: 0 -1vh; }
        .m-header--navbar--ul:after {
          content: "";
          display: block;
          clear: both; } }
    .m-header--navbar--ul--li {
      display: inline;
      font-size: 1.2rem;
      padding-right: 1.5rem; }
      @media only screen and (max-width: 479px) {
        .m-header--navbar--ul--li {
          display: inline-block;
          font-size: 5.0vw;
          padding-right: 0;
          border-right: 1px solid white; }
          .m-header--navbar--ul--li:last-child {
            border-right: 0; } }
      @media (min-width: 480px) and (max-width: 1024px) {
        .m-header--navbar--ul--li {
          padding-right: 1vw;
          font-size: 2.3vw; } }
      .m-header--navbar--ul--li--a {
        text-transform: uppercase;
        padding: 10px;
        position: relative; }
        @media only screen and (max-width: 479px) {
          .m-header--navbar--ul--li--a {
            padding: 5vw 2vw; } }
        .m-header--navbar--ul--li--a:hover {
          text-shadow: 0 0 3px white; }
        .m-header--navbar--ul--li--a:after, .m-header--navbar--ul--li--a:before {
          content: "";
          background: white;
          position: absolute;
          height: 2px;
          width: 100%;
          left: 0px;
          opacity: 0;
          -webkit-transition: all 0.2s;
          -o-transition: all 0.2s;
          transition: all 0.2s;
          -webkit-box-shadow: 0 0 3px white;
                  box-shadow: 0 0 3px white; }
        .m-header--navbar--ul--li--a:before {
          top: 0px;
          -webkit-transform: translateY(10px);
              -ms-transform: translateY(10px);
                  transform: translateY(10px); }
        .m-header--navbar--ul--li--a:after {
          bottom: 0px;
          -webkit-transform: translateY(-10px);
              -ms-transform: translateY(-10px);
                  transform: translateY(-10px); }
        .m-header--navbar--ul--li--a:hover:before, .m-header--navbar--ul--li--a:hover:after {
          opacity: 1;
          -webkit-transform: translateY(0px);
              -ms-transform: translateY(0px);
                  transform: translateY(0px); }
  .m-header--slogan {
    position: absolute;
    right: 48vw;
    top: -11.24896vw;
    margin-top: 25%;
    letter-spacing: 0.6vw;
    font-size: 5vw;
    text-align: center;
    text-transform: uppercase;
    text-shadow: black 0 0 3vw;
    line-height: 8vw; }
    .m-header--slogan:hover + .m-header--image {
      -webkit-box-shadow: 0 0 8vw white;
              box-shadow: 0 0 8vw white; }
    @media only screen and (max-width: 479px) {
      .m-header--slogan {
        position: initial;
        margin-left: auto;
        margin-right: auto;
        top: 0vw;
        margin-top: 25vh;
        letter-spacing: 1.2vw;
        font-size: 10vw;
        text-shadow: black 0 0 6vw;
        line-height: 16vw; } }
    @media (min-width: 480px) and (max-width: 1024px) {
      .m-header--slogan {
        top: -4.21836vw; } }
    .m-header--slogan span {
      display: block; }
      @media only screen and (max-width: 479px) {
        .m-header--slogan span {
          display: block;
          font-size: auto;
          text-shadow: 0 0 3vw; } }
    .m-header--slogan__smaller {
      display: block;
      font-size: 4vw;
      text-shadow: 0 0 1.5vw;
      line-height: 1vw;
      -webkit-transition: text-shadow 100ms ease-out;
      -o-transition: text-shadow 100ms ease-out;
      transition: text-shadow 100ms ease-out; }
      .m-header--slogan__smaller:hover {
        text-shadow: 0 0 4vw; }
      @media only screen and (max-width: 479px) {
        .m-header--slogan__smaller {
          font-size: 2rem;
          line-height: 2.2vw; } }
    .m-header--slogan--button {
      position: relative;
      z-index: 100;
      background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(188, 50, 50, 0.9)), to(#ca3c0c));
      background-image: -o-linear-gradient(rgba(188, 50, 50, 0.9), #ca3c0c);
      background-image: linear-gradient(rgba(188, 50, 50, 0.9), #ca3c0c);
      padding: 0.5rem 1rem;
      border-radius: 2rem;
      -webkit-box-shadow: 0 0 1.2rem rgba(0, 0, 0, 0.45);
              box-shadow: 0 0 1.2rem rgba(0, 0, 0, 0.45);
      font-family: 'Exo', sans-serif;
      font-size: 1rem;
      -webkit-transition: -webkit-box-shadow 100ms ease-out;
      transition: -webkit-box-shadow 100ms ease-out;
      -o-transition: box-shadow 100ms ease-out;
      transition: box-shadow 100ms ease-out;
      transition: box-shadow 100ms ease-out, -webkit-box-shadow 100ms ease-out;
      letter-spacing: 0.6vw; }
      .m-header--slogan--button:hover {
        background-color: green;
        -webkit-box-shadow: 0 0 3rem rgba(255, 255, 255, 0.45);
                box-shadow: 0 0 3rem rgba(255, 255, 255, 0.45); }
      @media only screen and (max-width: 479px) {
        .m-header--slogan--button {
          background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(188, 50, 50, 0.9)), to(#ca3c0c));
          background-image: -o-linear-gradient(rgba(188, 50, 50, 0.9), #ca3c0c);
          background-image: linear-gradient(rgba(188, 50, 50, 0.9), #ca3c0c);
          padding: 0.5rem 1rem;
          border-radius: 2rem;
          -webkit-box-shadow: 0 0 1.2rem rgba(0, 0, 0, 0.45);
                  box-shadow: 0 0 1.2rem rgba(0, 0, 0, 0.45);
          font-family: 'Exo', sans-serif;
          font-size: 1rem; }
          .m-header--slogan--button:hover {
            position: relative;
            z-index: 100;
            background-color: green;
            -webkit-box-shadow: 0 0 3rem rgba(255, 255, 255, 0.45);
                    box-shadow: 0 0 3rem rgba(255, 255, 255, 0.45); } }
  .m-header--image {
    margin-left: 30vw;
    top: -16.87344vw;
    margin-top: 25%;
    width: 60vw;
    height: 33.74688vw;
    background-image: url(../img/Dog.png);
    background-position: top right;
    background-size: contain;
    background-repeat: no-repeat;
    position: absolute;
    z-index: 10;
    pointer-events: none;
    -webkit-transition: -webkit-box-shadow 0.3s;
    transition: -webkit-box-shadow 0.3s;
    -o-transition: box-shadow 0.3s;
    transition: box-shadow 0.3s;
    transition: box-shadow 0.3s, -webkit-box-shadow 0.3s; }
    @media (min-width: 480px) and (max-width: 1024px) {
      .m-header--image {
        margin-left: 22vw;
        margin-top: 20%;
        height: 40.49625vw;
        width: 72vw; } }
    @media only screen and (max-width: 479px) {
      .m-header--image {
        margin-left: 0vw;
        width: 100vw;
        height: 56.25vw;
        top: auto;
        bottom: 0vw; } }
    @media (min-width: 480px) and (max-width: 1024px) {
      .m-header--image {
        top: -11.24896vw; } }

.BG1 {
  background-color: white; }

.m-section1 {
  position: relative;
  width: 80vw;
  min-width: 1024px;
  margin: auto;
  padding: 5vw; }
  .m-section1--decorative {
    border-top: 43vw solid #171717;
    border-left: 43vw solid transparent;
    border-right: 43vw solid transparent;
    position: absolute;
    left: 20vw;
    top: 0;
    width: 0px;
    height: 0px; }
    @media only screen and (max-width: 479px) {
      .m-section1--decorative {
        border-top: 60vw solid #171717;
        border-left: 60vw solid transparent;
        border-right: 60vw solid transparent; } }
  .m-section1--article {
    max-width: 35vw;
    padding: 5vw;
    margin-left: -5vw;
    position: relative;
    z-index: 10; }
    @media (min-width: 480px) and (max-width: 1024px) {
      .m-section1--article {
        max-width: none;
        width: 55vw; } }
    @media only screen and (max-width: 479px) {
      .m-section1--article {
        max-width: none;
        width: 100vw;
        margin-top: 30vw;
        text-align: center; } }
    .m-section1--article .h2 {
      font-size: 3.5vw;
      font-family: 'Open Sans', sans-serif;
      font-weight: 800;
      margin-top: -3vw;
      margin-left: -1vw; }
      @media (min-width: 480px) and (max-width: 1024px) {
        .m-section1--article .h2 {
          font-size: 7vw; } }
      @media only screen and (max-width: 479px) {
        .m-section1--article .h2 {
          font-size: 14vw; } }
    .m-section1--article .p {
      font-size: 1.1vw;
      font-family: 'Open Sans', sans-serif;
      margin-top: 4vw;
      margin-bottom: 5vw; }
      @media (min-width: 480px) and (max-width: 1024px) {
        .m-section1--article .p {
          font-size: 2.2vw; } }
      @media only screen and (max-width: 479px) {
        .m-section1--article .p {
          font-size: 4.4vw; } }
      @media only screen and (max-width: 479px) {
        .m-section1--article .p {
          margin-top: 20vw;
          margin-bottom: 26vw; } }
    .m-section1--article a {
      background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(188, 50, 50, 0.9)), to(#ca3c0c));
      background-image: -o-linear-gradient(rgba(188, 50, 50, 0.9), #ca3c0c);
      background-image: linear-gradient(rgba(188, 50, 50, 0.9), #ca3c0c);
      padding: 0.5rem 1rem;
      border-radius: 2rem;
      -webkit-box-shadow: 0 0 1.2rem rgba(0, 0, 0, 0.45);
              box-shadow: 0 0 1.2rem rgba(0, 0, 0, 0.45);
      font-family: 'Exo', sans-serif;
      font-size: 1rem;
      -webkit-transition: -webkit-box-shadow 100ms ease-out;
      transition: -webkit-box-shadow 100ms ease-out;
      -o-transition: box-shadow 100ms ease-out;
      transition: box-shadow 100ms ease-out;
      transition: box-shadow 100ms ease-out, -webkit-box-shadow 100ms ease-out;
      letter-spacing: 0.6vw;
      margin-left: -1vw; }
      .m-section1--article a:hover {
        background-color: green;
        -webkit-box-shadow: 0 0 3rem rgba(255, 255, 255, 0.45);
                box-shadow: 0 0 3rem rgba(255, 255, 255, 0.45); }
  .m-section1--image {
    background: url(../img/notebook.png);
    width: 40vw;
    height: 23.34vw;
    background-repeat: no-repeat;
    background-size: contain;
    top: 2vw;
    right: -45vw;
    position: absolute; }
    @media (min-width: 480px) and (max-width: 1024px) {
      .m-section1--image {
        width: 50vw;
        height: 35.51vw;
        top: 7vw;
        right: -42vw; } }
    @media only screen and (max-width: 479px) {
      .m-section1--image {
        display: none; } }

/* MAIN CONTENT 
    -------------------------- */
/* FOOTER
    -------------------------- */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
